# - Iterate through the selected curve objects
# - The names of the curves created by the writing animation add-on are generated by adding 00 
#   to the original
# - Use this criterion to get the original curves
# - Find the bevel_factor_end keyframe (end)
# - Create bevel_depth keyframes for the two sets of curves based on the 'end'.
import bpy

incr = 150 #This will determine how long the trail lasts
vDepth = 0

for i, o in enumerate(bpy.context.selected_objects):
    if(o.type != 'CURVE' or not o.name.endswith('00')):
        continue
    
    suffixIdx = o.name.rfind('00')
    
    name = o.name[0:suffixIdx]
    origCurve = bpy.data.objects.get(name)
    
    if(origCurve == None):
        continue

    fc = o.data.animation_data.action.fcurves.find('bevel_factor_end')
    if(fc == None):
        continue
        
    end = fc.keyframe_points[1].co[0]
    
    origCurve.scale = o.scale
    origCurve.hide_viewport = False
    origCurve.hide_render = False
    oldDepth = origCurve.data.bevel_depth
    origCurve.data.bevel_depth = vDepth
    origCurve.data.keyframe_insert(data_path='bevel_depth', frame=(end))

    origCurve.data.bevel_depth = oldDepth
    origCurve.data.keyframe_insert(data_path='bevel_depth', frame=(end + incr))
    
    o.data.keyframe_insert(data_path='bevel_depth', frame=(end))
    o.data.bevel_depth = vDepth
    o.data.keyframe_insert(data_path='bevel_depth', frame=(end + incr))
    
